plugins {
    id "dev.architectury.loom" version "0.7.3-SNAPSHOT"
    id 'maven-publish'
    id "com.matthewprenger.cursegradle" version "1.4.0"
}

apply from: 'https://files.saps.dev/ci/git-md-changelog.gradle'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

def ENV = System.getenv()
archivesBaseName = project.archives_base_name
version = "${mod_version}-build.${ENV.GITHUB_RUN_NUMBER ?: 9999}+mc${minecraft_version}"
group = project.maven_group

loom {
    silentMojangMappingsLicense()

    mixinConfigs = [
            "aquafied.mixins.json"
    ]

    dataGen {
        mod project.mod_id
    }

    launches {
        data {
            arg "--existing", file("src/main/resources").absolutePath
        }
    }
}

repositories {
    maven {
        name = "Progwml6 (Just Enough Items)"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"

    mappings minecraft.officialMojangMappings()

    forge "net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}"

    modApi "mezz.jei:jei-1.16.4:${jei_version}:api"
    modImplementation "mezz.jei:jei-1.16.4:${jei_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"

    def targetVersion = 8
    if (JavaVersion.current().isJava9Compatible()) {
        it.options.release = targetVersion
    }
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }

    manifest {
        attributes([
                "Specification-Title"     : project.mod_id,
                "Specification-Vendor"    : project.mod_author,
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : version,
                "Implementation-Vendor"   : project.mod_author,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }


    repositories {
        if (ENV.NANITE_DEPLOY) {
            maven {
                url "https://maven.nanite.dev/"
                credentials {
                    username = "nanite"
                    password = "${ENV.NANITE_DEPLOY}"
                }
            }
        }
    }
}

if (ENV.CURSE_DEPLOY) {
    curseforge {
        apiKey = ENV.CURSE_DEPLOY
        project {
            id = project.curseforge_id
            releaseType = "release"
            addGameVersion "Forge"
            addGameVersion "${minecraft_version}"
            mainArtifact(remapJar.archivePath)
            changelog = getGitChangelog
            changelogType = 'markdown'
        }
    }
}